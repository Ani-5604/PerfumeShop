{"ast":null,"code":"var _jsxFileName = \"D:\\\\PerfumeShop\\\\Frontend\\\\src\\\\components\\\\ReviewForm.js\",\n  _s = $RefreshSig$();\n// src/components/ProductPage.js\n\nimport React, { useEffect, useState } from 'react';\nimport ReviewForm from './ReviewForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductPage = () => {\n  _s();\n  const [productId, setProductId] = useState(null); // Initialize productId state\n  const [reviews, setReviews] = useState([]);\n  const [submissionMessage, setSubmissionMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n\n  // Mock function to simulate retrieving product ID, replace this with actual logic\n  useEffect(() => {\n    // Assume productId is coming from URL params or a similar source\n    const idFromParams = '123'; // Replace with actual logic to get product ID\n    setProductId(idFromParams);\n  }, []);\n  const fetchReviews = async () => {\n    if (!productId) {\n      console.error('Product ID is undefined');\n      return; // Prevent fetching if productId is undefined\n    }\n    try {\n      const response = await fetch(`/api/products/${productId}/reviews`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch reviews: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setReviews(data);\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n      setSubmissionMessage('Error fetching reviews. Please try again.');\n      setIsError(true);\n    }\n  };\n  const handleReviewSubmit = async review => {\n    if (!productId) {\n      console.error('Product ID is undefined, cannot submit review');\n      return; // Prevent submitting if productId is undefined\n    }\n    try {\n      const response = await fetch(`/api/products/${productId}/reviews`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(review)\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to submit review: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('Review submitted successfully:', data);\n      setReviews(prevReviews => [...prevReviews, data]);\n      setSubmissionMessage('Review submitted successfully!');\n      setIsError(false);\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      setSubmissionMessage('Failed to submit review. Please try again.');\n      setIsError(true);\n    }\n  };\n  useEffect(() => {\n    fetchReviews(); // Fetch reviews when the component mounts or productId changes\n  }, [productId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No reviews yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: review.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this), \": \", review.comment, \" (Rating: \", review.rating, \" stars)\"]\n        }, review.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReviewForm, {\n      onSubmit: handleReviewSubmit,\n      submissionMessage: submissionMessage,\n      isError: isError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductPage, \"GiUZUlLyzFMDwZA0NOuVPVFtxQo=\");\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["React","useEffect","useState","ReviewForm","jsxDEV","_jsxDEV","ProductPage","_s","productId","setProductId","reviews","setReviews","submissionMessage","setSubmissionMessage","isError","setIsError","idFromParams","fetchReviews","console","error","response","fetch","ok","Error","statusText","data","json","handleReviewSubmit","review","method","headers","body","JSON","stringify","log","prevReviews","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","username","comment","rating","id","onSubmit","_c","$RefreshReg$"],"sources":["D:/PerfumeShop/Frontend/src/components/ReviewForm.js"],"sourcesContent":["// src/components/ProductPage.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReviewForm from './ReviewForm';\r\n\r\nconst ProductPage = () => {\r\n    const [productId, setProductId] = useState(null); // Initialize productId state\r\n    const [reviews, setReviews] = useState([]);\r\n    const [submissionMessage, setSubmissionMessage] = useState('');\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    // Mock function to simulate retrieving product ID, replace this with actual logic\r\n    useEffect(() => {\r\n        // Assume productId is coming from URL params or a similar source\r\n        const idFromParams = '123'; // Replace with actual logic to get product ID\r\n        setProductId(idFromParams);\r\n    }, []);\r\n\r\n    const fetchReviews = async () => {\r\n        if (!productId) {\r\n            console.error('Product ID is undefined');\r\n            return; // Prevent fetching if productId is undefined\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`/api/products/${productId}/reviews`);\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to fetch reviews: ${response.statusText}`);\r\n            }\r\n            const data = await response.json();\r\n            setReviews(data);\r\n        } catch (error) {\r\n            console.error('Error fetching reviews:', error);\r\n            setSubmissionMessage('Error fetching reviews. Please try again.');\r\n            setIsError(true);\r\n        }\r\n    };\r\n\r\n    const handleReviewSubmit = async (review) => {\r\n        if (!productId) {\r\n            console.error('Product ID is undefined, cannot submit review');\r\n            return; // Prevent submitting if productId is undefined\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`/api/products/${productId}/reviews`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(review),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to submit review: ${response.statusText}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log('Review submitted successfully:', data);\r\n            setReviews((prevReviews) => [...prevReviews, data]);\r\n            setSubmissionMessage('Review submitted successfully!');\r\n            setIsError(false);\r\n        } catch (error) {\r\n            console.error('Error submitting review:', error);\r\n            setSubmissionMessage('Failed to submit review. Please try again.');\r\n            setIsError(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchReviews(); // Fetch reviews when the component mounts or productId changes\r\n    }, [productId]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Product Page</h1>\r\n            {/* Render product details here, e.g., product name, description, image, etc. */}\r\n            <div>\r\n                <h2>Reviews</h2>\r\n                {reviews.length === 0 ? (\r\n                    <p>No reviews yet.</p>\r\n                ) : (\r\n                    <ul>\r\n                        {reviews.map((review) => (\r\n                            <li key={review.id}>\r\n                                <strong>{review.username}</strong>: {review.comment} (Rating: {review.rating} stars)\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n            <ReviewForm onSubmit={handleReviewSubmit} submissionMessage={submissionMessage} isError={isError} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}