{"ast":null,"code":"var _jsxFileName = \"D:\\\\Perfume\\\\PerfumeShop\\\\frontend\\\\src\\\\components\\\\ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = ({\n  onSubmit,\n  submissionMessage,\n  isError\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [rating, setRating] = useState(5); // Default rating to 5\n  const [comment, setComment] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (username && comment) {\n      onSubmit({\n        username,\n        rating,\n        comment\n      });\n      // Reset the form after submission\n      setUsername('');\n      setRating(5);\n      setComment('');\n    } else {\n      alert('Please fill in all fields.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"review-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), submissionMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: isError ? 'error-message' : 'success-message',\n      children: submissionMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Your Name\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rating\",\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"rating\",\n        value: rating,\n        onChange: e => setRating(Number(e.target.value)),\n        children: [5, 4, 3, 2, 1].map(star => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: star,\n          children: star\n        }, star, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Your Review\",\n      value: comment,\n      onChange: e => setComment(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(ReviewForm, \"yUjh6085KP6Mus61zifkS4lGQ7E=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReviewForm","onSubmit","submissionMessage","isError","_s","username","setUsername","rating","setRating","comment","setComment","handleSubmit","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","htmlFor","id","Number","map","star","_c","$RefreshReg$"],"sources":["D:/Perfume/PerfumeShop/frontend/src/components/ReviewForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst ReviewForm = ({ onSubmit, submissionMessage, isError }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [rating, setRating] = useState(5); // Default rating to 5\r\n    const [comment, setComment] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (username && comment) {\r\n            onSubmit({ username, rating, comment });\r\n            // Reset the form after submission\r\n            setUsername('');\r\n            setRating(5);\r\n            setComment('');\r\n        } else {\r\n            alert('Please fill in all fields.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"review-form\" onSubmit={handleSubmit}>\r\n            <h2>Leave a Review</h2>\r\n            {submissionMessage && <p className={isError ? 'error-message' : 'success-message'}>{submissionMessage}</p>}\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Your Name\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n            />\r\n            <div>\r\n                <label htmlFor=\"rating\">Rating:</label>\r\n                <select id=\"rating\" value={rating} onChange={(e) => setRating(Number(e.target.value))}>\r\n                    {[5, 4, 3, 2, 1].map((star) => (\r\n                        <option key={star} value={star}>{star}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <textarea\r\n                placeholder=\"Your Review\"\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n                required\r\n            />\r\n            <button type=\"submit\">Submit Review</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ReviewForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}