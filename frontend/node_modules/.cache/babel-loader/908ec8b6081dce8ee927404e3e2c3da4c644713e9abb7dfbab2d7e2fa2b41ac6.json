{"ast":null,"code":"var _jsxFileName = \"D:\\\\PerfumeShop\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport Banner from './components/Banner';\nimport ProductCard from './components/ProductCard';\nimport ProductPage from './components/ProductPage';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockProducts = [{\n  id: 1,\n  name: 'Soul EDP',\n  description: 'Long-lasting perfume',\n  price: 999,\n  image: '/images/soul.jpg',\n  reviews: [],\n  images: ['/images/soul1.jpg', '/images/soul2.jpg']\n}\n// Add more products...\n];\nfunction App() {\n  _s();\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const handleProductClick = id => {\n    const product = mockProducts.find(p => p.id === id);\n    setSelectedProduct(product);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), selectedProduct ? /*#__PURE__*/_jsxDEV(ProductPage, {\n      product: selectedProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-grid\",\n        children: mockProducts.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product,\n          onClick: handleProductClick\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"LB7CKN5ei8ToaN6e4gYD7HPDpQA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","Banner","ProductCard","ProductPage","jsxDEV","_jsxDEV","Fragment","_Fragment","mockProducts","id","name","description","price","image","reviews","images","App","_s","selectedProduct","setSelectedProduct","handleProductClick","product","find","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["D:/PerfumeShop/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport Banner from './components/Banner';\nimport ProductCard from './components/ProductCard';\nimport ProductPage from './components/ProductPage';\nimport '../App.css';\n\nconst mockProducts = [\n    { id: 1, name: 'Soul EDP', description: 'Long-lasting perfume', price: 999, image: '/images/soul.jpg', reviews: [], images: ['/images/soul1.jpg', '/images/soul2.jpg'] },\n    // Add more products...\n];\n\nfunction App() {\n    const [selectedProduct, setSelectedProduct] = useState(null);\n\n    const handleProductClick = (id) => {\n        const product = mockProducts.find((p) => p.id === id);\n        setSelectedProduct(product);\n    };\n\n    return (\n        <div className=\"App\">\n            <Navbar />\n            {selectedProduct ? (\n                <ProductPage product={selectedProduct} />\n            ) : (\n                <>\n                    <Banner />\n                    <div className=\"product-grid\">\n                        {mockProducts.map((product) => (\n                            <ProductCard key={product.id} product={product} onClick={handleProductClick} />\n                        ))}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,MAAMC,YAAY,GAAG,CACjB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,WAAW,EAAE,sBAAsB;EAAEC,KAAK,EAAE,GAAG;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,OAAO,EAAE,EAAE;EAAEC,MAAM,EAAE,CAAC,mBAAmB,EAAE,mBAAmB;AAAE;AACvK;AAAA,CACH;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMqB,kBAAkB,GAAIX,EAAE,IAAK;IAC/B,MAAMY,OAAO,GAAGb,YAAY,CAACc,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACd,EAAE,KAAKA,EAAE,CAAC;IACrDU,kBAAkB,CAACE,OAAO,CAAC;EAC/B,CAAC;EAED,oBACIhB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBpB,OAAA,CAACL,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTX,eAAe,gBACZb,OAAA,CAACF,WAAW;MAACkB,OAAO,EAAEH;IAAgB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEzCxB,OAAA,CAAAE,SAAA;MAAAkB,QAAA,gBACIpB,OAAA,CAACJ,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVxB,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAC,QAAA,EACxBjB,YAAY,CAACsB,GAAG,CAAET,OAAO,iBACtBhB,OAAA,CAACH,WAAW;UAAkBmB,OAAO,EAAEA,OAAQ;UAACU,OAAO,EAAEX;QAAmB,GAA1DC,OAAO,CAACZ,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkD,CACjF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,eACR,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACZ,EAAA,CAzBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}